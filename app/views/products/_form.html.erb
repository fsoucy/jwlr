<div class="pure-g log-in">
  <div class="pure-u-1 pure-u-md-1-3"></div>
  <div class="pure-u-1 pure-u-md-1-3 log-in-form">
    <%= hidden_field_tag :has_picture, @has_picture %>
    <%= hidden_field_tag :activated, @product_activated %>
    <% if !@product.category.nil? %>
      <%= hidden_field_tag :initial_parent_category, @product.category.parent.id %>
      <%= hidden_field_tag :initial_category, @product.category.id %>
    <% end %>
    <%= hidden_field_tag :edit, @edit, class: "edit" %>
    <%= form_for(@product,  html: { multipart: true, class: "pure-form pure-form-stacked"} ) do |f| %>
    <fieldset id="product_form">
      <legend>Upload Product</legend>
      <%= render 'shared/error_messages', object: f.object %>
      <%= f.hidden_field :redirect_pictures, value: 0 %>
      <%= f.text_field :title, placeholder: 'Title', id: 'product_title', class: 'main_field' %>

      $ <%= f.number_field :price, placeholder: 'Price', step: '0.01', min: '0', id: 'product_price', class: 'main_field' %>

      <label for="parent_category_id">Category</label>
      <select class="parent_category_name" name="parent_category_id">
        <% @categories.each do |cat| %>
          <option id="parent_<%= cat[0].id %>" value="<%= cat[0].id %>"><% (0...cat[1]).each do |n|  %>- <% end %><%= cat[0].name %></option>
        <% end %>
      </select>

      <label for="product_category_id">Product Type</label>
      <select class="category_name" name="product[category_id]" id="product_category_id"></select>      

      <% if @has %>
        <%= f.label :store_id, "Store of Product" %>
        <%= f.select :store_id, options_for_select(@stos, @default) %>
      <% else %>
      <% end %>         
    
      <%= f.text_area :description, placeholder: 'Description of product', id: 'product_description', class: 'main_field' %>
      
      <br>
      <button class="pure-button pure-button-primary product_next_main" type="button">Next</button>
      <br>
      <%= f.submit "Save product", class: "pure-button pure-button-primary save" %>
      <%= f.submit "Submit product", class: "pure-button pure-button-primary submit_product" %>

    </fieldset>
    <fieldset id="toggle_options_form">
      <legend>Edit Toggle Options</legend>
      <%= f.label :category_id, "Product Type" %>
      <%= f.select :category_id, nested_dropdown(Category.where(:parent_id => nil), true), {}, { class: 'category_name' } %>
      <% if @product.category_id.nil? %>
      <% Category.first.category_options.each do |option| %>
      <%= fields_for "toggle_options[#{option.id}]", option do |opt| %>
      <%= opt.label :name, option.name, class: "toggle_option_option" %>
      <% selected = ToggleOption.joins('INNER JOIN `attribute_options` ON `attribute_options`.`id` = `toggle_options`.`attribute_option_id`').where("product_id = ? AND attribute_options.category_option_id = ?", @product.id, option.id).first %>
      <% if !selected.nil? %>
      <%= opt.select :name, options_for_select(option.attribute_options.all.pluck(:value, :id), :selected => selected.attribute_option_id), {}, { class: 'toggle_option_select'} %>
      <% else %>
      <%= opt.select :name, options_for_select(option.attribute_options.all.pluck(:value, :id)), {}, {class: 'toggle_option_select' } %>
      <% end %>
      <% end %>
      <% end %>
      <% else %>
      <% @product.category.category_options.each do |option| %>
      <%= fields_for "toggle_options[#{option.id}]", option do |opt| %>
      <%= opt.label :name, option.name, class: "toggle_option_option" %>
      <% selected = ToggleOption.joins('INNER JOIN `attribute_options` ON `attribute_options`.`id` = `toggle_options`.`attribute_option_id`').where("product_id= ? AND attribute_options.category_option_id = ?", @product.id, option.id).first %>
      <% if !selected.nil? %>
      <%= opt.select :name, options_for_select(option.attribute_options.all.pluck(:value, :id), :selected => selected.attribute_option_id), {}, { class: 'toggle_option_select'} %>
      <% else %>
      <%= opt.select :name, options_for_select(option.attribute_options.all.pluck(:value, :id)), {}, {class: 'toggle_option_select' } %>
      <% end %>
      <% end %>
      <% end %>
      <% end %>
      <br class="toggle_br">
      <button class="pure-button pure-button-primary product_previous_toggle" type="button">Previous</button>
      <button class="pure-button pure-button-primary product_next_toggle" type="button">Next</button>
      <br class="toggle_br">
      <%= f.submit "Save product", class: "pure-button pure-button-primary save save_toggles" %>  
      <%= f.submit "Submit product", class: "pure-button pure-button-primary submit_product submit_toggles" %>
    </fieldset>
    <fieldset id="selling_methods_form">
      <legend>Selling Methods</legend>
      <% @selling_methods.each do |selling_method| %>
      <%= fields_for "selling_method_links[#{selling_method.id}]", selling_method do |link| %>
      <% if !@edit %>
      <% boo = !DefaultSellingMethodLink.where("user_id=? AND selling_method_id=?", @product.user.id, selling_method.id).first.nil? %>
      <!-- DEFAULT -->
      <% else %>
      <% boo = !SellingMethodLink.where("product_id=? AND selling_method_id=?", @product.id, selling_method.id).first.nil? %>
      <% end %>
      <label class="pure-checkbox" for="selling_method">
	<%= link.check_box :id, checked: boo, class: "pure-checkbox selling_method"  %> <%= selling_method.method %>
      </label>
      <% end %>
      <% end %>
      <label class="pure-checkbox" for="selling_method">
      <%= f.check_box :selling_methods_default, checked: false, class: "pure-checkbox" %> Set these methods to default? 
      </label>
      <br>
      <button class="pure-button pure-button-primary product_previous_selling" type="button">Previous</button>
      <button class="pure-button pure-button-primary product_next_selling" type="button">Next</button>
      <br>
      <%= f.submit "Save product", class: "pure-button pure-button-primary save" %>
      <%= f.submit "Submit product", class: "pure-button pure-button-primary submit_product" %>
    </fieldset>
    <fieldset id="exchange_methods_form">
      <legend>Exchange Methods</legend>
      <% @exchange_methods.each do |exchange_method| %>
        <%= fields_for "exchange_method_links[#{exchange_method.id}]", exchange_method do |link| %>
          <% unless (exchange_method.method == "Pickup" && current_user.stores.count == 0) %>
            <% if !@edit %>
              <% boo = !DefaultExchangeMethodLink.where("user_id=? AND exchange_method_id=?", @product.user.id, exchange_method.id).first.nil? %>
            <% else %>
              <% boo = !ExchangeMethodLink.where("product_id=? AND exchange_method_id=?", @product.id, exchange_method.id).first.nil? %>
            <% end %>
            <label class="pure-checkbox" for="exchange_method">
	            <%= link.check_box :id, checked: boo, class: "pure-checkbox exchange_method" %> <%= exchange_method.method %>
            </label>
          <% end %>
        <% end %>
      <% end %>
      <div class="delivery_cost">
      <%= f.label :delivery_cost, "Delivery Cost" %>
      <% if @product.delivery_cost.nil? %>
        $ <%= f.number_field :delivery_cost, value: current_user.default_delivery_cost, id: "delivery_cost" %>
      <% else %>
        $ <%= f.number_field :delivery_cost, id: "delivery_cost" %>
      <% end %>
      </div>
      <%= f.check_box :exchange_methods_default, checked: false, class: "pure-checkbox" %> Set these methods to default?
      <br>
      <button class="pure-button pure-button-primary product_previous_exchange" type="button">Previous</button>
      <button class="pure-button pure-button-primary product_next_exchange" type="button">Next</button>
      <br>
      <%= f.submit "Save product", class: "pure-button pure-button-primary save" %>
      <%= f.submit "Submit product", class: "pure-button pure-button-primary submit_product" %>
    </fieldset>
    <fieldset id="payment_methods_form">
      <legend>Payment Methods</legend>
      <% @payment_methods.each do |payment_method| %>
      <%= fields_for "payment_method_links[#{payment_method.id}]", payment_method do |link| %>
      <% if !@edit %>
      <% boo = !DefaultPaymentMethodLink.where("user_id=? AND payment_method_id=?", @product.user.id, payment_method.id).first.nil? %>
      <% else %>
      <% boo = !PaymentMethodLink.where("product_id=? AND payment_method_id=?", @product.id, payment_method.id).first.nil? %>
      <% end %>
      <label class="pure-checkbox" for="payment_method">
	<%= link.check_box :id, checked: boo, class: "pure-checkbox payment_method" %> <%= payment_method.method %>
      </label>
      <% end %>
      <% end %>
      <%= f.check_box :payment_methods_default, checked: false, class: "pure-checkbox" %> Set these methods to default?
      <div id="upon_transaction">
      <legend>Upon Transaction Payment Methods</legend>
      <% @transactions.each do |transaction| %>
        <%= fields_for "payment_upon_transaction_links[#{transaction.id}]", transaction do |link| %>
          <% boo = !PaymentUponTransactionLink.where("user_id=? AND payment_upon_transaction_id=?", @user.id, transaction.id).first.nil? %>
          <label class="pure-checkbox for=payment_method">
            <%= link.check_box :id, checked: boo, class: "pure-checkbox" %> <%= transaction.method %>
          </label>
        <% end %>
      <% end %>
      </div>
      <br>
      <button class="pure-button pure-button-primary product_previous_payment" type="button">Previous</button>
      <button class="pure-button pure-button-primary product_next_payment" type="button">Next</button>
      <br>
      <%= f.submit "Save product", class: "pure-button pure-button-primary save" %>
      <%= f.submit "Submit product", class: "pure-button pure-button-primary submit_product" %>
    </fieldset>
    
    <% end %>
    <%= render 'picture_upload' %>
    <div class="pure-u-1 pure-u-md-1-3"></div>
  </div>
</div>
